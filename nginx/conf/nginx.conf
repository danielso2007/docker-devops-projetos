server {
    listen 80;
    server_name prometheus.local;
    location / {
        add_header Cache-Control "no-cache";
        include /etc/nginx/includes/proxy.conf;
        proxy_pass http://prometheus:9090;
    }

    access_log off;
    error_log /var/log/nginx/error.log error;
}

server {
    listen 80;
    server_name nexus.local;
    return 301 https://$host$request_uri;
}

server {
    listen 443 ssl;
    server_name nexus.local;
    http2 on;

    # Path for SSL config/key/certificate
    ssl_certificate /etc/letsencrypt/live/nexus.local/certificado-nexus.crt;
    ssl_certificate_key /etc/letsencrypt/live/nexus.local/key-nexus-privada.key;

    include /etc/nginx/includes/ssl.conf;

    location / {
        add_header Cache-Control "no-cache";
        include /etc/nginx/includes/proxy.conf;
        proxy_pass https://nexus:8094;
    }

    access_log off;
    error_log /var/log/nginx/error.log error;
}

server {
    listen 80;
    server_name sonar.local;
    return 301 https://$host$request_uri;
}

server {
    listen 443 ssl;
    server_name sonar.local;
    http2 on;

    # Path for SSL config/key/certificate
    ssl_certificate /etc/letsencrypt/live/sonar.local/certificado-sonar.crt;
    ssl_certificate_key /etc/letsencrypt/live/sonar.local/key-sonar-privada.key;

    include /etc/nginx/includes/ssl.conf;

    location / {
        add_header Cache-Control "no-cache";
        include /etc/nginx/includes/proxy.conf;
        proxy_pass http://sonar:9000;
    }

    access_log off;
    error_log /var/log/nginx/error.log error;
}

server {
    listen 80;
    server_name jenkins.local;
    return 301 https://$host$request_uri;
}

server {
    listen 443 ssl;
    server_name jenkins.local;
    http2 on;

    # Path for SSL config/key/certificate
    ssl_certificate /etc/letsencrypt/live/jenkins.local/certificado-jenkins.crt;
    ssl_certificate_key /etc/letsencrypt/live/jenkins.local/key-jenkins-privada.key;

    include /etc/nginx/includes/ssl.conf;

    location / {
        add_header Cache-Control "no-cache";
        include /etc/nginx/includes/proxy.conf;
        proxy_pass https://jenkins:8443;
    }

    access_log off;
    error_log /var/log/nginx/error.log error;
}

server {
    listen 80;
    server_name rancher.local;
    return 301 https://$host$request_uri;
}

server {
    listen 443 ssl;
    server_name rancher.local;
    http2 on;

    # Path for SSL config/key/certificate
    ssl_certificate /etc/letsencrypt/live/rancher.local/certificado-rancher.crt;
    ssl_certificate_key /etc/letsencrypt/live/rancher.local/key-rancher-privada.key;

    include /etc/nginx/includes/ssl.conf;

    location / {
        add_header Cache-Control "no-cache";
        include /etc/nginx/includes/proxy.conf;
        proxy_pass https://rancher;
    }

    access_log off;
    error_log /var/log/nginx/error.log error;
}

server {
    listen 80;
    server_name grafana.local;
    return 301 https://$host$request_uri;
}

server {
    listen 443 ssl;
    server_name grafana.local;
    http2 on;

    # Path for SSL config/key/certificate
    ssl_certificate /etc/letsencrypt/live/grafana.local/grafana.crt;
    ssl_certificate_key /etc/letsencrypt/live/grafana.local/grafana.key;

    include /etc/nginx/includes/ssl.conf;

    location / {
        add_header Cache-Control "no-cache";
        proxy_set_header Host grafana;
        proxy_set_header Origin http://grafana;
        include /etc/nginx/includes/proxy.conf;
        proxy_pass http://grafana:3000;
    }

    access_log off;
    error_log /var/log/nginx/error.log error;
}

# Default
server {
    listen 80 default_server;

    server_name _;
    root /usr/share/nginx/html;

    charset UTF-8;

    location /.well-known/acme-challenge/ {
        root /var/www/certbot;
    }

    location / {
        add_header Cache-Control "no-cache";
        # index index.html index.htm;
        # return 404; Para forçar a redirecionar para a página de erro.
    }
    error_page 500 502 503 504 /50x.html;
    location = /50x.html/ {
        allow all;
    }

    error_page 400 401 402 403 404 /40x.html;
    location = /40x.html/ {
        allow all;
    }

    access_log off;
    log_not_found off;
    error_log /var/log/nginx/error.log error;
}
